rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check for admin role
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Rules for users collection (e.g., user profiles, roles)
    match /users/{userId} {
      // Only authenticated users can read their own user data
      allow read: if request.auth != null && request.auth.uid == userId;
      // Only admins can create, update, or delete user data
      allow write: if isAdmin();
    }

    // Rules for appointments collection
    match /appointments/{appointmentId} {
      // All authenticated users can read appointments
      allow read: if request.auth != null;
      // Only admins can create, update, or delete appointments
      allow write: if isAdmin();
    }

    // Rules for slots collection
    match /slots/{slotId} {
      // All authenticated users can read available slots
      allow read: if request.auth != null;
      // Only admins can create or delete slots
      allow create, delete: if isAdmin();
      // Users can update slots only if they're booking it (changing isBooked to true)
      allow update: if request.auth != null &&
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['isBooked', 'bookedByUserId', 'bookedByUserName', 'bookedByEmail']) &&
        request.resource.data.isBooked == true &&
        resource.data.isBooked == false;
    }

    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }

    // Rules for the 'mail' collection (Firebase Extension "Trigger Email")
    match /mail/{document} {
      allow create: if true;
    }
  }
}
